{"version":3,"sources":["components/TVTable.js","components/SearchBar.js","components/TVRow.js","api/TheMovieDB.js","api/OAuth.js","api/TVshows.js","api/UserFun.js","constants/constants.js","state/actions.js","containers/Home.js","components/TvShowWatchList.js","containers/WatchList.js","navigation/AppRouter.js","components/Header.js","App.js","serviceWorker.js","state/reducers.js","index.js"],"names":["TVTable","props","tvElements","tvNext","tvPrevious","react_default","a","createElement","className","colSpan","onClick","aria-hidden","SearchBar","errorMesg","logBtn","un","pw","search","submitLogin","onUNChange","onPWChange","onSearchChange","submitSearch","errorData","handleLogout","isSignedIn","_props$searchFalse","searchFalse","Popup","trigger","icon","open","content","type","placeholder","value","onChange","onkeydown","id","name","TVRow","addOrDis","image","year","rate","lang","handleClickAdd","watchList","yearOnly","slice","percentageRating","Math","round","Poster","concat","length","results","console","log","watchListS","i","src","alt","axois","create","baseURL","_callee","api","rtData","data","res","regenerator_default","wrap","_context","prev","next","username","password","request_token","session_id","get","then","post","sent","abrupt","t0","alert","stop","_callee2","_context2","getTVLatest","_x","_getTVLatest","apply","this","arguments","page","_args","undefined","TVshows","_data$page","getWatchList","_x2","_x3","_getWatchList","iso_639_1","_data$sort","sort","tv_id","_callee3","body","_context3","setUserNameField","text","payload","setPasswordField","setSearchField","requestToken","dispatch","_createRequestToken","createRequestToken","_x4","_x5","_getAccDet","getAccDet","catch","error","requestWatchList","requestTVShows","query","_searchTV","searchTV","requestAccountStates","_getAccountStatus","getAccountStatus","requestAddOrRemoves","_addOrRemove","addOrRemove","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAuthenticate","e","preventDefault","onRequestToken","onRequestTV","submitSearchClick","handleClickNext","_this$props$TVshows","total_pages","handleClickPrevious","arr","target","split","account","media_type","media_id","watchlist","onRequestAddOrRemove","handleGetWatchList","onLogout","handleChange","bind","assertThisInitialized","_this$props","_this$props$page","_this$props$sort","_this$props$account","onRequestWatchList","evt","setState","defineProperty","_this$props2","_this$props2$page","_this$props2$sort","_this$props$account2","_this2","_this$props3","map","show","components_TVRow","key","poster_path","first_air_date","vote_average","original_language","components_SearchBar","components_TVTable","React","Component","connect","state","setFields","isPending","requestAccount","event","onRequestState","onRemoveFromWatch","TvShowWatchList","desc","WatchList","watchlistTable","components_TvShowWatchList","overview","AppRouter","react_router_dom","basename","exact","to","activeClassName","react_router","as","NavLink","path","component","Header","navigation_AppRouter","App","components_Header","class","Boolean","window","location","hostname","match","initialState","initialStateAuth","initialStateAccount","initialStateTV","haveTV","stateCheck","initialWatchList","initialWatchListAddRemove","tvShow","appReducer","combineReducers","action","objectSpread","assign","addOrDelete","filter","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d840cec1.chunk.js","sourcesContent":["import React from \"react\";\n\n//TODO: Connect up arrows for pagnation\nconst TVTable = props => {\n  const { tvElements, tvNext, tvPrevious } = props;\n\n  return (\n    <table className=\"ui celled padded table  \">\n      <thead className=\"\">\n        <tr className=\"\">\n          <th className=\"ui medium header \">Cover</th>\n          <th className=\"ui medium header\">Title</th>\n          <th className=\"ui medium header\">Year</th>\n          <th className=\"ui medium header\">Average</th>\n          <th className=\"ui medium header\">Language</th>\n          <th className=\"ui medium header\">Add/Remove</th>\n        </tr>\n      </thead>\n      <tbody className=\"\">{tvElements}</tbody>\n      <tfoot className=\"\">\n        <tr className=\"\">\n          <th colSpan=\"6\" className=\"\">\n            <div className=\"ui pagination right floated menu\">\n              <div className=\"icon item\" onClick={tvPrevious}>\n                <i aria-hidden=\"true\" className=\"chevron left icon\"></i>\n              </div>\n              <div className=\"icon item\" onClick={tvNext}>\n                <i aria-hidden=\"true\" className=\"chevron right icon\"></i>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default TVTable;\n","import React from \"react\";\nimport { Popup } from \"semantic-ui-react\";\n\nconst SearchBar = props => {\n  const {\n    un,\n    pw,\n    search,\n    submitLogin,\n    onUNChange,\n    onPWChange,\n    onSearchChange,\n    submitSearch,\n    errorData,\n    handleLogout,\n    isSignedIn,\n    searchFalse = true\n  } = props;\n\n  let errorMesg;\n  if (errorData === true) {\n    errorMesg = (\n      <Popup\n        trigger={<div icon=\"add\" />}\n        open={true}\n        content=\"Fill in username or password\"\n      />\n    );\n  } else {\n    errorMesg = \"\";\n  }\n  let logBtn;\n  if (isSignedIn === false) {\n    logBtn = (\n      <button className=\"ui primary button\" onClick={submitLogin}>\n        Login\n      </button>\n    );\n  } else {\n    logBtn = (\n      <button className=\"ui red button\" onClick={handleLogout}>\n        Logout\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"ui stackable menu\">\n      {searchFalse ? (\n        <div className=\"right item \">\n          <div className=\"ui icon  input\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={search}\n              onChange={onSearchChange}\n              onkeydown=\"search(this)\"\n            />\n            <i aria-hidden=\"true\" className=\"search icon\"></i>\n          </div>\n          <button className=\"ui big button\" onClick={submitSearch}>\n            Search\n          </button>\n        </div>\n      ) : (\n        <div className=\"right item \"></div>\n      )}\n\n      <div className=\"Username ui stackable menu\">\n        {errorMesg}\n        <div className=\"right item\">\n          <div className=\"ui icon  input icon\">\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              id=\"un\"\n              name=\"un\"\n              value={un}\n              onChange={onUNChange}\n            />\n            <i aria-hidden=\"true\" className=\"user icon\"></i>\n          </div>\n        </div>\n        <div className=\"right item\">\n          <div className=\"ui action input \">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              id=\"pw\"\n              name=\"pw\"\n              value={pw}\n              onChange={onPWChange}\n            />\n            {logBtn}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst TVRow = props => {\n  const {\n    id,\n    name,\n    image,\n    year,\n    rate,\n    lang,\n    handleClickAdd,\n    isSignedIn,\n    watchList\n  } = props;\n\n  const yearOnly = year.slice(0, 4);\n  const percentageRating = Math.round(rate * 10);\n  const Poster = `https://image.tmdb.org/t/p/w500/${image}`;\n\n  let addOrDis;\n  if (isSignedIn === false) {\n    addOrDis = (\n      <td id={id} className=\" center aligned negative\">\n        <i id={id} aria-hidden=\"true\" className=\"grey sign-in huge icon\"></i>\n        <div>Sign In</div>\n      </td>\n    );\n  } else {\n    // This is for before there is an array of watchlists returned\n    if (watchList.length === 0) {\n      addOrDis = (\n        <td\n          id={`A-${id}`}\n          className=\"selectable center aligned  huge icon \"\n          onClick={handleClickAdd}\n        >\n          <i\n            id={`A-${id}`}\n            aria-hidden=\"true\"\n            className=\"grey heart huge icon\"\n          ></i>\n        </td>\n      );\n      // This is for if there is an array returned but there are no movies in the watchlist yet\n    } else if (watchList.results.length === 0) {\n      console.log(watchList);\n      addOrDis = (\n        <td\n          id={`A-${id}`}\n          className=\"selectable center aligned  huge icon \"\n          onClick={handleClickAdd}\n        >\n          <i\n            id={`A-${id}`}\n            aria-hidden=\"true\"\n            className=\"grey heart huge icon\"\n          ></i>\n        </td>\n      );\n    } else {\n      let watchListS = watchList.results;\n      for (let i = 0; i < watchListS.length; i++) {\n        if (watchListS[i].id === id) {\n          addOrDis = (\n            <td\n              id={`R-${id}`}\n              className=\"selectable center aligned  huge icon \"\n              onClick={handleClickAdd}\n            >\n              <i\n                id={`R-${id}`}\n                aria-hidden=\"true\"\n                className=\"red heart huge icon\"\n              ></i>\n            </td>\n          );\n          break;\n        } else {\n          addOrDis = (\n            <td\n              id={`A-${id}`}\n              className=\"selectable center aligned  huge icon \"\n              onClick={handleClickAdd}\n            >\n              <i\n                id={`A-${id}`}\n                aria-hidden=\"true\"\n                className=\"grey heart huge icon\"\n              ></i>\n            </td>\n          );\n        }\n      }\n    }\n  }\n\n  return (\n    <tr id={id} className=\"\">\n      <td className=\"\">\n        <img\n          src={Poster}\n          alt={`Poster of ${name}`}\n          className=\"ui small image \"\n        />\n      </td>\n      <td className=\"ui medium header\">{name}</td>\n      <td className=\"\">{yearOnly}</td>\n      <td className=\"\">{`${percentageRating}%`}</td>\n      <td className=\"\">{lang}</td>\n\n      {addOrDis}\n    </tr>\n  );\n};\n\nexport default TVRow;\n\n//<div class=\"ui red label\">Red</div>\n","// Ecample APi Request\nimport axois from \"axios\";\n\nexport default axois.create({\n  baseURL: `https://api.themoviedb.org/3/`\n});\n","import axois from \"../api/TheMovieDB\";\n\n// This function will go create a request_token, after that it sets the request token into the data object\n// This then does another call to the api to validate a login, so takes in the dataobject\n// after this it then takes the validated key to user and creates a new session\n// With the response of the session we now set the data object and send it back to the calling function\nexport async function createRequestToken(api, un, pw) {\n  try {\n    let rtData = {};\n\n    let data = {\n      api: api,\n      username: un,\n      password: pw,\n      request_token: \"\",\n      session_id: \"\"\n    };\n\n    let res = await axois\n      .get(`authentication/token/new?api_key=${api}`)\n      .then(res => (data[\"request_token\"] = res.data.request_token))\n      .then(res =>\n        axois.post(\n          `authentication/token/validate_with_login?api_key=${api}`,\n          data\n        )\n      )\n      .then(res =>\n        axois.post(`authentication/session/new?api_key=${api}`, data)\n      );\n\n    data[\"session_id\"] = res.data.session_id;\n    rtData = data;\n    return rtData;\n  } catch (e) {\n    alert(\n      `${e}\\nverification failed: make sure your user name and password are correct`\n    );\n  }\n}\n\n// Getting the accoutn details for the user account\n// Needed for id of the user to grab watchlists etc\nexport async function getAccDet(api, session_id) {\n  try {\n    let rtData = {};\n\n    let res = await axois.get(\n      `/account?api_key=${api}&session_id=${session_id}`\n    );\n    rtData = res.data;\n    return rtData;\n  } catch (e) {\n    alert(e);\n  }\n}\n","import axois from \"../api/TheMovieDB\";\n\nexport async function getTVLatest(api, page = 1) {\n  try {\n    let rtData = {};\n\n    let data = {\n      TVshows: \"\"\n    };\n\n    await axois\n      .get(`tv/popular?api_key=${api}&language=en-US&page=${page}`)\n      .then(res => (data[\"TVshows\"] = res.data));\n\n    rtData = data.TVshows;\n    return rtData;\n  } catch (e) {\n    alert(e);\n  }\n}\n\nexport async function searchTV(data) {\n  const { api, search, page = 1 } = data;\n\n  try {\n    let res = await axois\n      .get(\n        `/search/tv?api_key=${api}&language=en-US&query=${search}&page=${page}`\n      )\n      .then(res => (data[\"TVshows\"] = res.data));\n\n    return res;\n  } catch (e) {\n    alert(e);\n  }\n}\n","import axois from \"../api/TheMovieDB\";\n\n// -- Holds the calls related to user function once a user has logged in\n\nexport async function getWatchList(api, session_id, data) {\n  const { id, iso_639_1, page = 1, sort = \"created_at.asc\" } = data;\n  try {\n    let res = await axois.get(\n      `account/${id}/watchlist/tv?api_key=${api}&language=${iso_639_1}&session_id=${session_id}&sort_by=${sort}&page=${page}`\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n\nexport async function getAccountStatus(data) {\n  const { api, session_id, tv_id } = data;\n  try {\n    let res = await axois.get(\n      `/tv/${tv_id}/account_states?api_key=${api}&language=en-US&session_id=${session_id}`\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n\n// Call to add or remove the movie from the watchList\nexport async function addOrRemove(data) {\n  const { id, session_id, api } = data;\n  const body = data.body;\n  try {\n    let res = await axois.post(\n      `account/${id}/watchlist?api_key=${api}&session_id=${session_id}`,\n      body\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n","// Input field constants\nexport const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const CHANGE_PASSWORD_FIELD = \"CHANGE_PASSWORD_FIELD\";\nexport const CHANGE_USERNAME_FIELD = \"CHANGE_USERNAME_FIELD\";\n\n// -- Async filed constants --\n//Movies\nexport const REQUEST_MOVIES_PENDING = \"REQUEST_MOVIES_PENDING\";\nexport const REQUEST_MOVIES_SUCCESS = \"REQUEST_MOVIES_SUCCESS\";\nexport const REQUEST_MOVIES_FAILED = \"REQUEST_MOVIES_FAILED\";\n\n// OAuth - Request_token\nexport const REQUEST_RTOKEN_PENDING = \"REQUEST_RTOKEN_PENDING\";\nexport const REQUEST_RTOKEN_SUCCESS = \"REQUEST_RTOKEN_SUCCESS\";\nexport const REQUEST_RTOKEN_FAILED = \"REQUEST_RTOKEN_FAILED\";\n\n// OAuth - Get Account details\nexport const REQUEST_ACC_PENDING = \"REQUEST_ACC_PENDING\";\nexport const REQUEST_ACC_SUCCESS = \"REQUEST_ACC_SUCCESS\";\nexport const REQUEST_ACC_FAILED = \"REQUEST_ACC_FAILED\";\n\n// -- TV SHOWS\n\n// OAuth - Get Account details\nexport const REQUEST_TV_PENDING = \"REQUEST_TV_PENDING\";\nexport const REQUEST_TV_SUCCESS = \"REQUEST_TV_SUCCESS\";\nexport const REQUEST_TV_FAILED = \"REQUEST_TV_FAILED\";\n\n// OAuth - Get Account States\nexport const REQUEST_STATES_PENDING = \"REQUEST_STATES_PENDING\";\nexport const REQUEST_STATES_SUCCESS = \"REQUEST_STATES_SUCCESS\";\nexport const REQUEST_STATES_FAILED = \"REQUEST_STATES_FAILED\";\n\n//WatchList\nexport const REQUEST_WATCHLIST_PENDING = \"REQUEST_WATCHLIST_PENDING\";\nexport const REQUEST_WATCHLIST_SUCCESS = \"REQUEST_WATCHLIST_SUCCESS,\";\nexport const REQUEST_WATCHLIST_FAILED = \"REQUEST_WATCHLIST_FAILED\";\n\n//ADD or Remove from watchlist\nexport const REQUEST_ADDORREMOVE_PENDING = \"REQUEST_ADDORREMOVE_PENDING\";\nexport const REQUEST_ADDORREMOVE_SUCCESS = \"REQUEST_ADDORREMOVE_SUCCESS,\";\nexport const REQUEST_ADDORREMOVE_FAILED = \"REQUEST_ADDORREMOVE_FAILED\";\n// Adding or removing movie  from watchList props\nexport const ADD_OR_REMOVE = \"ADD_OR_REMOVE\";\n\n//Search for a tv show\nexport const REQUEST_SEARCH_PENDING = \"REQUEST_SEARCH_PENDING\";\nexport const REQUEST_SEARCH_SUCCESS = \"REQUEST_SEARCH_SUCCESS,\";\nexport const REQUEST_SEARCH_FAILED = \"REQUEST_SEARCH_FAILED\";\n\n//ERRORS\nexport const ERROR_NO_DATA = \"ERROR_NO_DATA\";\n\n//Logout\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n","import { createRequestToken, getAccDet } from \"../api/OAuth\";\nimport { getTVLatest, searchTV } from \"../api/TVshows\";\nimport { getAccountStatus, getWatchList, addOrRemove } from \"../api/UserFun\";\nimport {\n  CHANGE_SEARCH_FIELD,\n  CHANGE_USERNAME_FIELD,\n  CHANGE_PASSWORD_FIELD,\n  REQUEST_RTOKEN_PENDING,\n  REQUEST_RTOKEN_SUCCESS,\n  REQUEST_RTOKEN_FAILED,\n  REQUEST_ACC_PENDING,\n  REQUEST_ACC_SUCCESS,\n  REQUEST_ACC_FAILED,\n  REQUEST_TV_PENDING,\n  REQUEST_TV_SUCCESS,\n  REQUEST_TV_FAILED,\n  REQUEST_WATCHLIST_PENDING,\n  REQUEST_WATCHLIST_SUCCESS,\n  REQUEST_WATCHLIST_FAILED,\n  REQUEST_STATES_PENDING,\n  REQUEST_STATES_SUCCESS,\n  REQUEST_STATES_FAILED,\n  REQUEST_ADDORREMOVE_PENDING,\n  REQUEST_ADDORREMOVE_SUCCESS,\n  REQUEST_ADDORREMOVE_FAILED,\n  ADD_OR_REMOVE,\n  ERROR_NO_DATA,\n  USER_LOGOUT\n} from \"../constants/constants\";\n\n// Changing inputs\nexport const setUserNameField = text => ({\n  type: CHANGE_USERNAME_FIELD,\n  payload: text\n});\n\nexport const setPasswordField = text => ({\n  type: CHANGE_PASSWORD_FIELD,\n  payload: text\n});\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//TODO: Change deleteShow to addOrRemoveShow\nexport const deleteShow = text => ({\n  type: ADD_OR_REMOVE,\n  payload: text\n});\n\nexport const userLogout = () => ({\n  type: USER_LOGOUT\n});\n\n// -- ASYNC Calls\n\n// OAuth\n//Requesting for a request_token with api key\n//Once it is gotten it is then used to authenticate it against a user\nexport const requestToken = data => dispatch => {\n  if (data.un === \"\" || data.pw === \"\") {\n    dispatch({ type: ERROR_NO_DATA });\n  } else {\n    let { api } = data;\n    dispatch({ type: REQUEST_RTOKEN_PENDING });\n    createRequestToken(data.api, data.un, data.pw)\n      .then(data => dispatch({ type: REQUEST_RTOKEN_SUCCESS, payload: data }))\n      .then(res => {\n        dispatch({ type: REQUEST_ACC_PENDING, data });\n        let session_id = res.payload.session_id;\n\n        getAccDet(res.payload.api, res.payload.session_id)\n          .then(data => dispatch({ type: REQUEST_ACC_SUCCESS, payload: data }))\n          .then(res => {\n            dispatch({ type: REQUEST_WATCHLIST_PENDING, data });\n            getWatchList(api, session_id, res.payload)\n              .then(data =>\n                dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data })\n              )\n              .catch(error =>\n                dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n              );\n          })\n          .catch(error =>\n            dispatch({ type: REQUEST_ACC_FAILED, payload: error })\n          );\n      })\n      .catch(error =>\n        dispatch({ type: REQUEST_RTOKEN_FAILED, payload: error })\n      );\n  }\n};\n\n//Action to call the watchlist\nexport const requestWatchList = data => dispatch => {\n  dispatch({ type: REQUEST_WATCHLIST_PENDING });\n  getWatchList(data.api, data.session_id, data)\n    .then(data => dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data }))\n    .catch(error =>\n      dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n    );\n};\n\nexport const requestTVShows = data => dispatch => {\n  if (data.query === true && data.search !== \"\") {\n    dispatch({ type: REQUEST_TV_PENDING });\n    searchTV(data)\n      .then(data => dispatch({ type: REQUEST_TV_SUCCESS, payload: data }))\n      .catch(error => dispatch({ type: REQUEST_TV_FAILED, payload: error }));\n  } else if (data.query === true && data.search === \"\") {\n    dispatch({ type: REQUEST_TV_PENDING });\n    getTVLatest(data.api, data.page)\n      .then(data => dispatch({ type: REQUEST_TV_SUCCESS, payload: data }))\n      .catch(error => dispatch({ type: REQUEST_TV_FAILED, payload: error }));\n  } else {\n    dispatch({ type: REQUEST_TV_PENDING });\n    getTVLatest(data.api, data.page)\n      .then(data => dispatch({ type: REQUEST_TV_SUCCESS, payload: data }))\n      .catch(error => dispatch({ type: REQUEST_TV_FAILED, payload: error }));\n  }\n};\n\n//Action to call to see if the tv show is in the watchlist\nexport const requestAccountStates = data => dispatch => {\n  dispatch({ type: REQUEST_STATES_PENDING });\n  getAccountStatus(data)\n    .then(data => dispatch({ type: REQUEST_STATES_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_STATES_FAILED, payload: error }));\n};\n\n//This will send for a remove or add first\n//Then ask for the list that we're looking at to be refreshed, so that the heart updates\nexport const requestAddOrRemoves = data => dispatch => {\n  let { api, session_id } = data;\n  dispatch({ type: REQUEST_ADDORREMOVE_PENDING });\n  addOrRemove(data)\n    .then(data =>\n      dispatch({ type: REQUEST_ADDORREMOVE_SUCCESS, payload: data })\n    )\n    .catch(error =>\n      dispatch({ type: REQUEST_ADDORREMOVE_FAILED, payload: error })\n    )\n    .then(res => {\n      dispatch({ type: REQUEST_WATCHLIST_PENDING, data });\n      getWatchList(api, session_id, res.payload)\n        .then(data =>\n          dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data })\n        )\n        .catch(error =>\n          dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n        );\n    });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/Home.css\";\n// Components\nimport TVTable from \"../components/TVTable\";\nimport SearchBar from \"../components/SearchBar\";\nimport TVRow from \"../components/TVRow\";\n\n//Importing redux actions\nimport {\n  setUserNameField,\n  setPasswordField,\n  setSearchField,\n  requestToken,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  deleteShow,\n  userLogout\n} from \"../state/actions\";\n\n//Mapping reduxProps\nconst mapStateToProps = state => {\n  return {\n    un: state.setFields.un,\n    pw: state.setFields.pw,\n    search: state.setFields.search,\n    isPending: state.requestToken.isPending,\n    error: state.requestToken.error,\n    requestToken: state.requestToken.requestToken,\n    data: state.requestToken.data,\n    api: state.requestToken.api,\n    account: state.requestAccount.account,\n    isSignedIn: state.requestAccount.isSignedIn,\n    TVshows: state.requestTVShows.TVshows,\n    watchList: state.requestWatchList.watchList,\n    errorData: state.requestAccount.errorData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUNChange: event => dispatch(setUserNameField(event.target.value)),\n    onPWChange: event => dispatch(setPasswordField(event.target.value)),\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestToken: data => dispatch(requestToken(data)),\n    onRequestTV: data => dispatch(requestTVShows(data)),\n    onRequestState: data => dispatch(requestAccountStates(data)),\n    onRequestWatchList: data => dispatch(requestWatchList(data)),\n    onRequestAddOrRemove: data => dispatch(requestAddOrRemoves(data)),\n    onRemoveFromWatch: data => dispatch(deleteShow(data)),\n    onLogout: () => dispatch(userLogout())\n  };\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Once the component mounts it will call an action to grab a list of the first page of popular tv shows\n  // If to make sure it only grabs it if the TVshows prop is blank\n  //If the user is signed in and the component mounts it will check through the watchlist to update what the user already has added or not\n  componentDidMount() {\n    const isSignedIn = this.props.isSignedIn;\n    if (this.props.TVshows.length === 0) {\n      let data = {\n        api: this.props.api,\n        page: 1,\n        query: false\n      };\n      this.props.onRequestTV(data);\n    }\n    if (isSignedIn) {\n      const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n      const { session_id } = this.props.data;\n      const { id, iso_639_1 } = this.props.account;\n      const data = {\n        api: api,\n        session_id: session_id,\n        id: id,\n        sort: sort,\n        page: page,\n        iso_639_1: iso_639_1\n      };\n      this.props.onRequestWatchList(data);\n    }\n  }\n\n  // This gets called when ever the input boxes are used\n  // This sets the un if it was an username change or a pw if it was a password change with each change\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  //This calls the action to autenticate the request_token with a users credentials\n  handleAuthenticate = e => {\n    e.preventDefault(); //Preventing the form from rerendering the screen\n    let data = {\n      api: this.props.api,\n      un: this.props.un,\n      pw: this.props.pw,\n      page: 1,\n      query: false\n    };\n    this.props.onRequestToken(data); // Calling the onRequestToken and passing in the api key that was just grabbed\n    this.props.onRequestTV(data);\n  };\n\n  handleGetWatchList() {\n    const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n    const { session_id } = this.props.data;\n    const { id, iso_639_1 } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      sort: sort,\n      page: page,\n      iso_639_1: iso_639_1,\n      query: false\n    };\n    this.props.onRequestWatchList(data);\n  }\n\n  submitSearchClick = (page = 1) => {\n    const { api } = this.props;\n    const search = this.props.search;\n\n    const data = {\n      api: api,\n      page: page,\n      search: search,\n      query: true\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  handleClickNext = () => {\n    let { page, total_pages } = this.props.TVshows;\n    if (page < total_pages) {\n      page++;\n      this.submitSearchClick(page);\n    }\n  };\n\n  handleClickPrevious = () => {\n    let { page } = this.props.TVshows;\n    if (page > 1) {\n      page--;\n      this.submitSearchClick(page);\n    }\n  };\n\n  //This will get take the id from the event, passs it in with the users account, and either apply or remove it from the watchList\n  // Change the css to red rather than recalling the watchlist\n  handleClickAdd = e => {\n    let arr = e.target.id.split(\"-\");\n    let tv_id = arr[1];\n    let addOrRemove;\n    if (arr[0] === \"R\") {\n      addOrRemove = false;\n    } else {\n      addOrRemove = true;\n    }\n    const { api } = this.props;\n    const { session_id } = this.props.data;\n    const { id } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      body: {\n        media_type: \"tv\",\n        media_id: tv_id,\n        watchlist: addOrRemove\n      }\n    };\n    this.props.onRequestAddOrRemove(data);\n    this.handleGetWatchList();\n  };\n\n  //Logs the user out and grabs the popular tv shows to show\n  handleLogout = () => {\n    this.props.onLogout();\n    let data = {\n      api: this.props.api,\n      page: 1,\n      query: false\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  //\n  // -- RENDER --\n  //\n  render() {\n    // Deconstructing the props to use easier\n    const {\n      onPWChange,\n      onUNChange,\n      onSearchChange,\n      un,\n      pw,\n      search,\n      isSignedIn,\n      TVshows,\n      watchList,\n      errorData\n    } = this.props;\n\n    let tvElements;\n    if (TVshows.length === 0) {\n      tvElements = <tr className=\"ui active inline centerd huge loader\"></tr>;\n    } else if (isSignedIn) {\n      tvElements = TVshows.results.map(show => (\n        <TVRow\n          id={show.id}\n          key={show.id}\n          name={show.name}\n          image={show.poster_path}\n          year={show.first_air_date}\n          rate={show.vote_average}\n          lang={show.original_language}\n          handleClickAdd={this.handleClickAdd}\n          isSignedIn={isSignedIn}\n          watchList={watchList}\n        />\n      ));\n    } else {\n      tvElements = TVshows.results.map(show => (\n        <TVRow\n          id={show.id}\n          key={show.id}\n          name={show.name}\n          image={show.poster_path}\n          year={show.first_air_date}\n          rate={show.vote_average}\n          lang={show.original_language}\n          handleClickAdd={this.handleClickAdd}\n          isSignedIn={isSignedIn}\n          watchList={watchList}\n        />\n      ));\n    }\n\n    return (\n      <div className=\"ui\">\n        <SearchBar\n          un={un}\n          pw={pw}\n          search={search}\n          submitLogin={this.handleAuthenticate}\n          onUNChange={onUNChange}\n          onPWChange={onPWChange}\n          onSearchChange={onSearchChange}\n          submitSearch={this.submitSearchClick}\n          errorData={errorData}\n          handleLogout={this.handleLogout}\n          isSignedIn={isSignedIn}\n        />\n\n        <div className=\"ui container\">\n          <TVTable\n            tvElements={tvElements}\n            tvNext={this.handleClickNext}\n            tvPrevious={this.handleClickPrevious}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\n\nconst TvShowWatchList = props => {\n  let { id, name, image, year, rate, desc, handleClickAdd } = props;\n  const Poster = `https://image.tmdb.org/t/p/w500/${image}`;\n\n  if (props.id === undefined) {\n    return <div className=\"item\"></div>;\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"image\">\n          <img alt=\"poster\" className=\"ui small image\" src={Poster} />\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">{name}</div>\n          <div className=\"meta\">\n            <span className=\"cinema\">\n              Year: {year} - Ratting: {rate}\n            </span>\n          </div>\n\n          <div className=\"description\">{desc}</div>\n          <div className=\"extra\">\n            <button\n              id={`R-${id}`}\n              onClick={handleClickAdd}\n              className=\"ui primary button\"\n            >\n              Remove From List\n              <i aria-hidden=\"true\" className=\"right chevron icon\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default TvShowWatchList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n//Styles\nimport \"../styles/WatchList.css\";\n//Components\nimport TvShowWatchList from \"../components/TvShowWatchList\";\nimport SearchBar from \"../components/SearchBar\";\n\n//Importing redux actions\nimport {\n  setUserNameField,\n  setPasswordField,\n  setSearchField,\n  requestToken,\n  requestTVShows,\n  requestWatchList,\n  requestAddOrRemoves,\n  userLogout\n} from \"../state/actions\";\n\n//Mapping reduxProps\nconst mapStateToProps = state => {\n  return {\n    un: state.setFields.un,\n    pw: state.setFields.pw,\n    isPending: state.requestToken.isPending,\n    error: state.requestToken.error,\n    requestToken: state.requestToken.requestToken,\n    data: state.requestToken.data,\n    api: state.requestToken.api,\n    account: state.requestAccount.account,\n    TVshows: state.requestTVShows.TVshows,\n    watchList: state.requestWatchList.watchList,\n    isSignedIn: state.requestAccount.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUNChange: event => dispatch(setUserNameField(event.target.value)),\n    onPWChange: event => dispatch(setPasswordField(event.target.value)),\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestToken: data => dispatch(requestToken(data)),\n    onRequestTV: data => dispatch(requestTVShows(data)),\n    onRequestWatchList: data => dispatch(requestWatchList(data)),\n    onRequestAddOrRemove: data => dispatch(requestAddOrRemoves(data)),\n    onLogout: () => dispatch(userLogout())\n  };\n};\n\nclass WatchList extends React.Component {\n  // If the user is signed in mounting this component will get the users current watchlist\n  componentDidMount() {\n    const { isSignedIn } = this.props;\n\n    if (isSignedIn) {\n      this.handleGetWatchList();\n    }\n  }\n\n  handleAuthenticate = e => {\n    e.preventDefault(); //Preventing the form from rerendering the screen\n    let data = {\n      api: this.props.api,\n      un: this.props.un,\n      pw: this.props.pw,\n      page: 1\n    };\n    this.props.onRequestToken(data); // Calling the onRequestToken and passing in the api key that was just grabbed\n  };\n\n  handleGetWatchList() {\n    const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n    const { session_id } = this.props.data;\n    const { id, iso_639_1 } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      sort: sort,\n      page: page,\n      iso_639_1: iso_639_1\n    };\n    this.props.onRequestWatchList(data);\n  }\n\n  handleClickAdd = e => {\n    let arr = e.target.id.split(\"-\");\n    let tv_id = arr[1];\n    let addOrRemove;\n    if (arr[0] === \"R\") {\n      addOrRemove = false;\n    } else {\n      addOrRemove = true;\n    }\n    const { api } = this.props;\n    const { session_id } = this.props.data;\n    const { id } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      body: {\n        media_type: \"tv\",\n        media_id: tv_id,\n        watchlist: addOrRemove\n      }\n    };\n    this.props.onRequestAddOrRemove(data);\n    this.handleGetWatchList();\n  };\n\n  handleLogout = () => {\n    this.props.onLogout();\n    let data = {\n      api: this.props.api,\n      page: 1,\n      query: false\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  render() {\n    const {\n      onPWChange,\n      onUNChange,\n      un,\n      pw,\n      watchList,\n      isSignedIn\n    } = this.props;\n\n    let watchlistTable;\n    if (isSignedIn) {\n      if (watchList.length === 0) {\n        this.handleGetWatchList();\n      } else {\n        watchlistTable = watchList.results.map(show => (\n          <TvShowWatchList\n            id={show.id}\n            key={show.id}\n            name={show.name}\n            image={show.poster_path}\n            year={show.first_air_date}\n            rate={show.vote_average}\n            lang={show.original_language}\n            desc={show.overview}\n            handleClickAdd={this.handleClickAdd}\n          />\n        ));\n      }\n    } else {\n      watchlistTable = (\n        <div>\n          <div className=\"ui red message header\">\n            Please sign in to get your TV watchList\n          </div>\n          <div className=\"ui divider\"></div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"ui\">\n        <SearchBar\n          un={un}\n          pw={pw}\n          submitLogin={this.handleAuthenticate}\n          onUNChange={onUNChange}\n          onPWChange={onPWChange}\n          handleLogout={this.handleLogout}\n          isSignedIn={isSignedIn}\n          searchFalse={false}\n        />\n        <div className=\"ui\">\n          <div className=\"ui container divided items watchListTable\">\n            {watchlistTable}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WatchList);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport Home from \"../containers/Home\";\nimport WatchList from \"../containers/WatchList\";\n\nfunction AppRouter() {\n  return (\n    <Router basename=\"/MovieDB\">\n      <div>\n        <nav className=\"ui  pointing secondary menu container \">\n          <NavLink className=\" item\" exact to=\"/\" activeClassName=\"active\">\n            Home\n          </NavLink>\n\n          <NavLink className=\" item\" to=\"/watch_list/\" activeClassName=\"active\">\n            Watch List\n          </NavLink>\n        </nav>\n        <Route as={NavLink} exact path=\"/\" component={Home} />\n        <Route as={NavLink} path=\"/watch_list/\" component={WatchList} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"../navigation/AppRouter\";\n\nconst Header = () => {\n  return (\n    <div className=\"ui \">\n      <h1 className=\" ui huge inverted vertical center aligned segment\">\n        My Tv shows\n      </h1>\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./styles/App.css\";\n\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui \">\n        <Header class=\"ui vertical center aligned segment\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  CHANGE_USERNAME_FIELD,\n  CHANGE_PASSWORD_FIELD,\n  REQUEST_RTOKEN_PENDING,\n  REQUEST_RTOKEN_SUCCESS,\n  REQUEST_RTOKEN_FAILED,\n  REQUEST_ACC_PENDING,\n  REQUEST_ACC_SUCCESS,\n  REQUEST_ACC_FAILED,\n  REQUEST_TV_PENDING,\n  REQUEST_TV_SUCCESS,\n  REQUEST_TV_FAILED,\n  REQUEST_STATES_PENDING,\n  REQUEST_STATES_SUCCESS,\n  REQUEST_STATES_FAILED,\n  REQUEST_WATCHLIST_PENDING,\n  REQUEST_WATCHLIST_SUCCESS,\n  REQUEST_WATCHLIST_FAILED,\n  ADD_OR_REMOVE,\n  REQUEST_SEARCH_PENDING,\n  REQUEST_SEARCH_SUCCESS,\n  REQUEST_SEARCH_FAILED,\n  ERROR_NO_DATA,\n  USER_LOGOUT\n} from \"../constants/constants\";\n\n// Setting inital state for the state\nconst initialState = {\n  un: \"\",\n  pw: \"\",\n  search: \"\",\n  error: \"\"\n};\n\nexport const userLogout = (action = {}) => {\n  switch (action.type) {\n    case USER_LOGOUT:\n      return { USER_LOGOUT };\n    default:\n      return USER_LOGOUT;\n  }\n};\n\nexport const setFields = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_USERNAME_FIELD:\n      return { ...state, un: action.payload };\n    case CHANGE_PASSWORD_FIELD:\n      return { ...state, pw: action.payload };\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, search: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateAuth = {\n  isPending: true,\n  api: \"9ccbc3e0393b7578cbf2eb8ae9f260c0\",\n  error: \"\",\n  data: []\n};\n\nexport const requestToken = (state = initialStateAuth, action = {}) => {\n  switch (action.type) {\n    case REQUEST_RTOKEN_PENDING:\n      return Object.assign({}, state, { isPending: true, errorData: false });\n\n    case REQUEST_RTOKEN_SUCCESS:\n      return Object.assign({}, state, {\n        data: action.payload,\n        isPending: false,\n        errorData: false\n      });\n\n    case REQUEST_RTOKEN_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialStateAccount = {\n  // accountStat: false,\n  isPending: true,\n  error: \"\",\n  account: [],\n  isSignedIn: false,\n  errorData: false\n};\n\nexport const requestAccount = (state = initialStateAccount, action = {}) => {\n  switch (action.type) {\n    case ERROR_NO_DATA:\n      return Object.assign({}, state, { errorData: true });\n    case REQUEST_ACC_PENDING:\n      return Object.assign({}, state, { isPending: true, errorData: false });\n\n    case REQUEST_ACC_SUCCESS:\n      return Object.assign({}, state, {\n        account: action.payload,\n        isSignedIn: true,\n        isPending: false,\n        errorData: false\n      });\n\n    case REQUEST_ACC_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n        errorData: false\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialStateTV = {\n  isPending: true,\n  error: \"\",\n  TVshows: [],\n  haveTV: false,\n  stateCheck: []\n};\n\n// Request for a TV show without authentication\nexport const requestTVShows = (state = initialStateTV, action = {}) => {\n  switch (action.type) {\n    case REQUEST_TV_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_TV_SUCCESS:\n      return Object.assign({}, state, {\n        TVshows: action.payload,\n        haveTV: false,\n        isPending: false\n      });\n\n    case REQUEST_TV_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    case REQUEST_SEARCH_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_SEARCH_SUCCESS:\n      return Object.assign({}, state, {\n        watchList: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_SEARCH_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\n// -- Getting the users watchlist\nconst initialWatchList = {\n  isPending: true,\n  error: \"\",\n  watchList: []\n};\n\nexport const requestWatchList = (state = initialWatchList, action = {}) => {\n  switch (action.type) {\n    case REQUEST_WATCHLIST_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_WATCHLIST_SUCCESS:\n      return Object.assign({}, state, {\n        watchList: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_WATCHLIST_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n\n    default:\n      return state;\n  }\n};\n\n//Gets back a status of if the movie is in the watchlist or not\nexport const requestAccountStates = (state = initialStateTV, action = {}) => {\n  switch (action.type) {\n    case REQUEST_STATES_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_STATES_SUCCESS:\n      return Object.assign({}, state, {\n        ...state,\n        stateCheck: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_STATES_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialWatchListAddRemove = {\n  isPending: true,\n  error: \"\",\n  tvShow: []\n};\n\nexport const requestAddOrRemoves = (\n  state = initialWatchListAddRemove,\n  action = {}\n) => {\n  switch (action.type) {\n    case REQUEST_WATCHLIST_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_WATCHLIST_SUCCESS:\n      return Object.assign({}, state, {\n        tvShow: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_WATCHLIST_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nexport const addOrDelete = (state = initialWatchList, action) => {\n  switch (action.type) {\n    case ADD_OR_REMOVE:\n      //let tv_id = action.payload;\n      return {\n        ...state,\n        watchList: state.watchList.filter(\n          show => show.watchList.results.id !== action.tv_id\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\n//SEMANTIC-UI-REACT for css and some compoennts\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\n//import { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  setFields,\n  requestToken,\n  requestAccount,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  addOrDelete\n} from \"./state/reducers\";\n\n//Added redux logger in for debugging purposes\n//const logger = createLogger();\nconst appReducer = combineReducers({\n  setFields,\n  requestToken,\n  requestAccount,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  addOrDelete\n});\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}