{"version":3,"sources":["components/TVTable.js","components/SearchBar.js","components/TVRow.js","api/TheMovieDB.js","api/OAuth.js","api/TVshows.js","api/UserFun.js","constants/constants.js","state/actions.js","containers/Home.js","components/TvShowWatchList.js","containers/WatchList.js","navigation/AppRouter.js","components/Header.js","App.js","serviceWorker.js","state/reducers.js","index.js"],"names":["TVTable","props","tvElements","react_default","a","createElement","className","colSpan","aria-hidden","SearchBar","errorMesg","logBtn","un","pw","search","submitLogin","onUNChange","onPWChange","onSearchChange","submitSearch","errorData","handleLogout","isSignedIn","_props$searchFalse","searchFalse","Popup","trigger","icon","open","content","onClick","type","placeholder","value","onChange","id","name","TVRow","addOrDis","image","year","rate","lang","handleClickAdd","watchList","yearOnly","slice","percentageRating","Math","round","Poster","concat","length","results","console","log","watchListS","i","src","alt","axois","create","baseURL","_callee","api","rtData","data","res","regenerator_default","wrap","_context","prev","next","username","password","request_token","session_id","get","then","post","sent","abrupt","t0","alert","stop","_callee2","_context2","page","_args","arguments","undefined","TVshows","getWatchList","_x","_x2","_x3","_getWatchList","apply","this","iso_639_1","_data$page","_data$sort","sort","tv_id","_callee3","body","_context3","setUserNameField","text","payload","setPasswordField","setSearchField","requestToken","dispatch","_createRequestToken","createRequestToken","_x4","_x5","_getAccDet","getAccDet","catch","error","requestWatchList","requestTVShows","query","_searchTV","searchTV","_getTVLatest","getTVLatest","requestAccountStates","_getAccountStatus","getAccountStatus","requestAddOrRemoves","_addOrRemove","addOrRemove","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAuthenticate","e","preventDefault","onRequestToken","onRequestTV","submitSearchClick","arr","target","split","account","media_type","media_id","watchlist","onRequestAddOrRemove","handleGetWatchList","onLogout","handleChange","bind","assertThisInitialized","_this$props","_this$props$page","_this$props$sort","_this$props$account","onRequestWatchList","evt","setState","defineProperty","_this$props2","_this$props2$page","_this$props2$sort","_this$props$account2","_this2","_this$props3","map","show","components_TVRow","key","poster_path","first_air_date","vote_average","original_language","components_SearchBar","components_TVTable","React","Component","connect","state","setFields","isPending","requestAccount","event","onRequestState","onRemoveFromWatch","TvShowWatchList","desc","WatchList","watchlistTable","components_TvShowWatchList","overview","AppRouter","react_router_dom","basename","exact","to","activeClassName","react_router","as","NavLink","path","component","Header","navigation_AppRouter","App","components_Header","class","Boolean","window","location","hostname","match","initialState","initialStateAuth","initialStateAccount","initialStateTV","haveTV","stateCheck","initialWatchList","initialWatchListAddRemove","tvShow","appReducer","combineReducers","action","objectSpread","assign","addOrDelete","filter","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eabcfa1.chunk.js","sourcesContent":["import React from \"react\";\n\n//TODO: Connect up arrows for pagnation\nconst TVTable = props => {\n  const { tvElements } = props;\n  return (\n    <table className=\"ui celled padded table  \">\n      <thead className=\"\">\n        <tr className=\"\">\n          <th className=\"ui medium header \">Cover</th>\n          <th className=\"ui medium header\">Title</th>\n          <th className=\"ui medium header\">Year</th>\n          <th className=\"ui medium header\">Average</th>\n          <th className=\"ui medium header\">Language</th>\n          <th className=\"ui medium header\">Add/Remove</th>\n        </tr>\n      </thead>\n      <tbody className=\"\">{tvElements}</tbody>\n      <tfoot className=\"\">\n        <tr className=\"\">\n          <th colSpan=\"6\" className=\"\">\n            <div className=\"ui pagination right floated menu\">\n              <div className=\"icon item\">\n                <i aria-hidden=\"true\" className=\"chevron left icon\"></i>\n              </div>\n              <div className=\"icon item\">\n                <i aria-hidden=\"true\" className=\"chevron right icon\"></i>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default TVTable;\n","import React from \"react\";\nimport { Popup } from \"semantic-ui-react\";\n\nconst SearchBar = props => {\n  const {\n    un,\n    pw,\n    search,\n    submitLogin,\n    onUNChange,\n    onPWChange,\n    onSearchChange,\n    submitSearch,\n    errorData,\n    handleLogout,\n    isSignedIn,\n    searchFalse = true\n  } = props;\n\n  let errorMesg;\n  if (errorData === true) {\n    errorMesg = (\n      <Popup\n        trigger={<div icon=\"add\" />}\n        open={true}\n        content=\"Fill in username or password\"\n      />\n    );\n  } else {\n    errorMesg = \"\";\n  }\n  let logBtn;\n  if (isSignedIn === false) {\n    logBtn = (\n      <button className=\"ui primary button\" onClick={submitLogin}>\n        Login\n      </button>\n    );\n  } else {\n    logBtn = (\n      <button className=\"ui red button\" onClick={handleLogout}>\n        Logout\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"ui stackable menu\">\n      {searchFalse ? (\n        <div className=\"right item \">\n          <div className=\"ui icon  input\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={search}\n              onChange={onSearchChange}\n            />\n            <i aria-hidden=\"true\" className=\"search icon\"></i>\n          </div>\n          <button className=\"ui big button\" onClick={submitSearch}>\n            Search\n          </button>\n        </div>\n      ) : (\n        <div className=\"right item \"></div>\n      )}\n\n      <div className=\"Username ui stackable menu\">\n        {errorMesg}\n        <div className=\"right item\">\n          <div className=\"ui icon  input icon\">\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              id=\"un\"\n              name=\"un\"\n              value={un}\n              onChange={onUNChange}\n            />\n            <i aria-hidden=\"true\" className=\"user icon\"></i>\n          </div>\n        </div>\n        <div className=\"right item\">\n          <div className=\"ui action input \">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              id=\"pw\"\n              name=\"pw\"\n              value={pw}\n              onChange={onPWChange}\n            />\n            {logBtn}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst TVRow = props => {\n  const {\n    id,\n    name,\n    image,\n    year,\n    rate,\n    lang,\n    handleClickAdd,\n    isSignedIn,\n    watchList\n  } = props;\n\n  const yearOnly = year.slice(0, 4);\n  const percentageRating = Math.round(rate * 10);\n  const Poster = `https://image.tmdb.org/t/p/w500/${image}`;\n\n  let addOrDis;\n  if (isSignedIn === false) {\n    addOrDis = (\n      <td id={id} className=\" center aligned negative\">\n        <i id={id} aria-hidden=\"true\" className=\"grey sign-in huge icon\"></i>\n        <div>Sign In</div>\n      </td>\n    );\n  } else {\n    // This is for before there is an array of watchlists returned\n    if (watchList.length === 0) {\n      addOrDis = (\n        <td\n          id={`A-${id}`}\n          className=\"selectable center aligned  huge icon \"\n          onClick={handleClickAdd}\n        >\n          <i\n            id={`A-${id}`}\n            aria-hidden=\"true\"\n            className=\"grey heart huge icon\"\n          ></i>\n        </td>\n      );\n      // This is for if there is an array returned but there are no movies in the watchlist yet\n    } else if (watchList.results.length === 0) {\n      console.log(watchList);\n      addOrDis = (\n        <td\n          id={`A-${id}`}\n          className=\"selectable center aligned  huge icon \"\n          onClick={handleClickAdd}\n        >\n          <i\n            id={`A-${id}`}\n            aria-hidden=\"true\"\n            className=\"grey heart huge icon\"\n          ></i>\n        </td>\n      );\n    } else {\n      let watchListS = watchList.results;\n      for (let i = 0; i < watchListS.length; i++) {\n        if (watchListS[i].id === id) {\n          addOrDis = (\n            <td\n              id={`R-${id}`}\n              className=\"selectable center aligned  huge icon \"\n              onClick={handleClickAdd}\n            >\n              <i\n                id={`R-${id}`}\n                aria-hidden=\"true\"\n                className=\"red heart huge icon\"\n              ></i>\n            </td>\n          );\n          break;\n        } else {\n          addOrDis = (\n            <td\n              id={`A-${id}`}\n              className=\"selectable center aligned  huge icon \"\n              onClick={handleClickAdd}\n            >\n              <i\n                id={`A-${id}`}\n                aria-hidden=\"true\"\n                className=\"grey heart huge icon\"\n              ></i>\n            </td>\n          );\n        }\n      }\n    }\n  }\n\n  return (\n    <tr id={id} className=\"\">\n      <td className=\"\">\n        <img\n          src={Poster}\n          alt={`Poster of ${name}`}\n          className=\"ui small image \"\n        />\n      </td>\n      <td className=\"ui medium header\">{name}</td>\n      <td className=\"\">{yearOnly}</td>\n      <td className=\"\">{`${percentageRating}%`}</td>\n      <td className=\"\">{lang}</td>\n\n      {addOrDis}\n    </tr>\n  );\n};\n\nexport default TVRow;\n\n//<div class=\"ui red label\">Red</div>\n","// Ecample APi Request\nimport axois from \"axios\";\n\nexport default axois.create({\n  baseURL: `https://api.themoviedb.org/3/`\n});\n","import axois from \"../api/TheMovieDB\";\n\n// This function will go create a request_token, after that it sets the request token into the data object\n// This then does another call to the api to validate a login, so takes in the dataobject\n// after this it then takes the validated key to user and creates a new session\n// With the response of the session we now set the data object and send it back to the calling function\nexport async function createRequestToken(api, un, pw) {\n  try {\n    let rtData = {};\n\n    let data = {\n      api: api,\n      username: un,\n      password: pw,\n      request_token: \"\",\n      session_id: \"\"\n    };\n\n    let res = await axois\n      .get(`authentication/token/new?api_key=${api}`)\n      .then(res => (data[\"request_token\"] = res.data.request_token))\n      .then(res =>\n        axois.post(\n          `authentication/token/validate_with_login?api_key=${api}`,\n          data\n        )\n      )\n      .then(res =>\n        axois.post(`authentication/session/new?api_key=${api}`, data)\n      );\n\n    data[\"session_id\"] = res.data.session_id;\n    rtData = data;\n    return rtData;\n  } catch (e) {\n    alert(\n      `${e}\\nverification failed: make sure your user name and password are correct`\n    );\n  }\n}\n\n// Getting the accoutn details for the user account\n// Needed for id of the user to grab watchlists etc\nexport async function getAccDet(api, session_id) {\n  try {\n    let rtData = {};\n\n    let res = await axois.get(\n      `/account?api_key=${api}&session_id=${session_id}`\n    );\n    rtData = res.data;\n    return rtData;\n  } catch (e) {\n    alert(e);\n  }\n}\n","import axois from \"../api/TheMovieDB\";\n\nexport async function getTVLatest(api, page = 1) {\n  try {\n    let rtData = {};\n\n    let data = {\n      TVshows: \"\"\n    };\n\n    await axois\n      .get(`tv/popular?api_key=${api}&language=en-US&page=${page}`)\n      .then(res => (data[\"TVshows\"] = res.data));\n\n    rtData = data.TVshows;\n    return rtData;\n  } catch (e) {\n    alert(e);\n  }\n}\n\nexport async function searchTV(data) {\n  const { api, search } = data;\n\n  try {\n    let res = await axois\n      .get(`/search/tv?api_key=${api}&language=en-US&query=${search}&page=1`)\n      .then(res => (data[\"TVshows\"] = res.data));\n\n    console.log(res.results);\n    return res;\n  } catch (e) {\n    alert(e);\n  }\n}\n","import axois from \"../api/TheMovieDB\";\n\n// -- Holds the calls related to user function once a user has logged in\n\nexport async function getWatchList(api, session_id, data) {\n  const { id, iso_639_1, page = 1, sort = \"created_at.asc\" } = data;\n  try {\n    let res = await axois.get(\n      `account/${id}/watchlist/tv?api_key=${api}&language=${iso_639_1}&session_id=${session_id}&sort_by=${sort}&page=${page}`\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n\nexport async function getAccountStatus(data) {\n  const { api, session_id, tv_id } = data;\n  try {\n    let res = await axois.get(\n      `/tv/${tv_id}/account_states?api_key=${api}&language=en-US&session_id=${session_id}`\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n\n// Call to add or remove the movie from the watchList\nexport async function addOrRemove(data) {\n  const { id, session_id, api } = data;\n  const body = data.body;\n  try {\n    let res = await axois.post(\n      `account/${id}/watchlist?api_key=${api}&session_id=${session_id}`,\n      body\n    );\n    return res.data;\n  } catch (e) {\n    alert(e);\n  }\n}\n","// Input field constants\nexport const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const CHANGE_PASSWORD_FIELD = \"CHANGE_PASSWORD_FIELD\";\nexport const CHANGE_USERNAME_FIELD = \"CHANGE_USERNAME_FIELD\";\n\n// -- Async filed constants --\n//Movies\nexport const REQUEST_MOVIES_PENDING = \"REQUEST_MOVIES_PENDING\";\nexport const REQUEST_MOVIES_SUCCESS = \"REQUEST_MOVIES_SUCCESS\";\nexport const REQUEST_MOVIES_FAILED = \"REQUEST_MOVIES_FAILED\";\n\n// OAuth - Request_token\nexport const REQUEST_RTOKEN_PENDING = \"REQUEST_RTOKEN_PENDING\";\nexport const REQUEST_RTOKEN_SUCCESS = \"REQUEST_RTOKEN_SUCCESS\";\nexport const REQUEST_RTOKEN_FAILED = \"REQUEST_RTOKEN_FAILED\";\n\n// OAuth - Get Account details\nexport const REQUEST_ACC_PENDING = \"REQUEST_ACC_PENDING\";\nexport const REQUEST_ACC_SUCCESS = \"REQUEST_ACC_SUCCESS\";\nexport const REQUEST_ACC_FAILED = \"REQUEST_ACC_FAILED\";\n\n// -- TV SHOWS\n\n// OAuth - Get Account details\nexport const REQUEST_TV_PENDING = \"REQUEST_TV_PENDING\";\nexport const REQUEST_TV_SUCCESS = \"REQUEST_TV_SUCCESS\";\nexport const REQUEST_TV_FAILED = \"REQUEST_TV_FAILED\";\n\n// OAuth - Get Account States\nexport const REQUEST_STATES_PENDING = \"REQUEST_STATES_PENDING\";\nexport const REQUEST_STATES_SUCCESS = \"REQUEST_STATES_SUCCESS\";\nexport const REQUEST_STATES_FAILED = \"REQUEST_STATES_FAILED\";\n\n//WatchList\nexport const REQUEST_WATCHLIST_PENDING = \"REQUEST_WATCHLIST_PENDING\";\nexport const REQUEST_WATCHLIST_SUCCESS = \"REQUEST_WATCHLIST_SUCCESS,\";\nexport const REQUEST_WATCHLIST_FAILED = \"REQUEST_WATCHLIST_FAILED\";\n\n//ADD or Remove from watchlist\nexport const REQUEST_ADDORREMOVE_PENDING = \"REQUEST_ADDORREMOVE_PENDING\";\nexport const REQUEST_ADDORREMOVE_SUCCESS = \"REQUEST_ADDORREMOVE_SUCCESS,\";\nexport const REQUEST_ADDORREMOVE_FAILED = \"REQUEST_ADDORREMOVE_FAILED\";\n// Adding or removing movie  from watchList props\nexport const ADD_OR_REMOVE = \"ADD_OR_REMOVE\";\n\n//Search for a tv show\nexport const REQUEST_SEARCH_PENDING = \"REQUEST_SEARCH_PENDING\";\nexport const REQUEST_SEARCH_SUCCESS = \"REQUEST_SEARCH_SUCCESS,\";\nexport const REQUEST_SEARCH_FAILED = \"REQUEST_SEARCH_FAILED\";\n\n//ERRORS\nexport const ERROR_NO_DATA = \"ERROR_NO_DATA\";\n\n//Logout\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n","import { createRequestToken, getAccDet } from \"../api/OAuth\";\nimport { getTVLatest, searchTV } from \"../api/TVshows\";\nimport { getAccountStatus, getWatchList, addOrRemove } from \"../api/UserFun\";\nimport {\n  CHANGE_SEARCH_FIELD,\n  CHANGE_USERNAME_FIELD,\n  CHANGE_PASSWORD_FIELD,\n  REQUEST_RTOKEN_PENDING,\n  REQUEST_RTOKEN_SUCCESS,\n  REQUEST_RTOKEN_FAILED,\n  REQUEST_ACC_PENDING,\n  REQUEST_ACC_SUCCESS,\n  REQUEST_ACC_FAILED,\n  REQUEST_TV_PENDING,\n  REQUEST_TV_SUCCESS,\n  REQUEST_TV_FAILED,\n  REQUEST_WATCHLIST_PENDING,\n  REQUEST_WATCHLIST_SUCCESS,\n  REQUEST_WATCHLIST_FAILED,\n  REQUEST_STATES_PENDING,\n  REQUEST_STATES_SUCCESS,\n  REQUEST_STATES_FAILED,\n  REQUEST_ADDORREMOVE_PENDING,\n  REQUEST_ADDORREMOVE_SUCCESS,\n  REQUEST_ADDORREMOVE_FAILED,\n  ADD_OR_REMOVE,\n  ERROR_NO_DATA,\n  USER_LOGOUT\n} from \"../constants/constants\";\n\n// Changing inputs\nexport const setUserNameField = text => ({\n  type: CHANGE_USERNAME_FIELD,\n  payload: text\n});\n\nexport const setPasswordField = text => ({\n  type: CHANGE_PASSWORD_FIELD,\n  payload: text\n});\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n//TODO: Change deleteShow to addOrRemoveShow\nexport const deleteShow = text => ({\n  type: ADD_OR_REMOVE,\n  payload: text\n});\n\nexport const userLogout = () => ({\n  type: USER_LOGOUT\n});\n\n// -- ASYNC Calls\n\n// OAuth\n//Requesting for a request_token with api key\n//Once it is gotten it is then used to authenticate it against a user\nexport const requestToken = data => dispatch => {\n  if (data.un === \"\" || data.pw === \"\") {\n    dispatch({ type: ERROR_NO_DATA });\n  } else {\n    let { api } = data;\n    dispatch({ type: REQUEST_RTOKEN_PENDING });\n    createRequestToken(data.api, data.un, data.pw)\n      .then(data => dispatch({ type: REQUEST_RTOKEN_SUCCESS, payload: data }))\n      .then(res => {\n        dispatch({ type: REQUEST_ACC_PENDING, data });\n        let session_id = res.payload.session_id;\n\n        getAccDet(res.payload.api, res.payload.session_id)\n          .then(data => dispatch({ type: REQUEST_ACC_SUCCESS, payload: data }))\n          .then(res => {\n            dispatch({ type: REQUEST_WATCHLIST_PENDING, data });\n            getWatchList(api, session_id, res.payload)\n              .then(data =>\n                dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data })\n              )\n              .catch(error =>\n                dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n              );\n          })\n          .catch(error =>\n            dispatch({ type: REQUEST_ACC_FAILED, payload: error })\n          );\n      })\n      .catch(error =>\n        dispatch({ type: REQUEST_RTOKEN_FAILED, payload: error })\n      );\n  }\n};\n\n//Action to call the watchlist\nexport const requestWatchList = data => dispatch => {\n  dispatch({ type: REQUEST_WATCHLIST_PENDING });\n  getWatchList(data.api, data.session_id, data)\n    .then(data => dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data }))\n    .catch(error =>\n      dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n    );\n};\n\nexport const requestTVShows = data => dispatch => {\n  if (data.query === true && data.search !== \"\") {\n    dispatch({ type: REQUEST_TV_PENDING });\n    searchTV(data)\n      .then(data => dispatch({ type: REQUEST_TV_SUCCESS, payload: data }))\n      .catch(error => dispatch({ type: REQUEST_TV_FAILED, payload: error }));\n  } else if (data.query === true && data.search === \"\") {\n    //Does nothing\n  } else {\n    dispatch({ type: REQUEST_TV_PENDING });\n    getTVLatest(data.api, data.page)\n      .then(data => dispatch({ type: REQUEST_TV_SUCCESS, payload: data }))\n      .catch(error => dispatch({ type: REQUEST_TV_FAILED, payload: error }));\n  }\n};\n\n//Action to call to see if the tv show is in the watchlist\nexport const requestAccountStates = data => dispatch => {\n  dispatch({ type: REQUEST_STATES_PENDING });\n  getAccountStatus(data)\n    .then(data => dispatch({ type: REQUEST_STATES_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_STATES_FAILED, payload: error }));\n};\n\n//This will send for a remove or add first\n//Then ask for the list that we're looking at to be refreshed, so that the heart updates\nexport const requestAddOrRemoves = data => dispatch => {\n  let { api, session_id } = data;\n  dispatch({ type: REQUEST_ADDORREMOVE_PENDING });\n  addOrRemove(data)\n    .then(data =>\n      dispatch({ type: REQUEST_ADDORREMOVE_SUCCESS, payload: data })\n    )\n    .catch(error =>\n      dispatch({ type: REQUEST_ADDORREMOVE_FAILED, payload: error })\n    )\n    .then(res => {\n      dispatch({ type: REQUEST_WATCHLIST_PENDING, data });\n      getWatchList(api, session_id, res.payload)\n        .then(data =>\n          dispatch({ type: REQUEST_WATCHLIST_SUCCESS, payload: data })\n        )\n        .catch(error =>\n          dispatch({ type: REQUEST_WATCHLIST_FAILED, payload: error })\n        );\n    });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/Home.css\";\n// Components\nimport TVTable from \"../components/TVTable\";\nimport SearchBar from \"../components/SearchBar\";\nimport TVRow from \"../components/TVRow\";\n\n//Importing redux actions\nimport {\n  setUserNameField,\n  setPasswordField,\n  setSearchField,\n  requestToken,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  deleteShow,\n  userLogout\n} from \"../state/actions\";\n\n//Mapping reduxProps\nconst mapStateToProps = state => {\n  return {\n    un: state.setFields.un,\n    pw: state.setFields.pw,\n    search: state.setFields.search,\n    isPending: state.requestToken.isPending,\n    error: state.requestToken.error,\n    requestToken: state.requestToken.requestToken,\n    data: state.requestToken.data,\n    api: state.requestToken.api,\n    account: state.requestAccount.account,\n    isSignedIn: state.requestAccount.isSignedIn,\n    TVshows: state.requestTVShows.TVshows,\n    watchList: state.requestWatchList.watchList,\n    errorData: state.requestAccount.errorData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUNChange: event => dispatch(setUserNameField(event.target.value)),\n    onPWChange: event => dispatch(setPasswordField(event.target.value)),\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestToken: data => dispatch(requestToken(data)),\n    onRequestTV: data => dispatch(requestTVShows(data)),\n    onRequestState: data => dispatch(requestAccountStates(data)),\n    onRequestWatchList: data => dispatch(requestWatchList(data)),\n    onRequestAddOrRemove: data => dispatch(requestAddOrRemoves(data)),\n    onRemoveFromWatch: data => dispatch(deleteShow(data)),\n    onLogout: () => dispatch(userLogout())\n  };\n};\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Once the component mounts it will call an action to grab a list of the first page of popular tv shows\n  // If to make sure it only grabs it if the TVshows prop is blank\n  //If the user is signed in and the component mounts it will check through the watchlist to update what the user already has added or not\n  componentDidMount() {\n    const isSignedIn = this.props.isSignedIn;\n    if (this.props.TVshows.length === 0) {\n      let data = {\n        api: this.props.api,\n        page: 1,\n        query: false\n      };\n      this.props.onRequestTV(data);\n    }\n    if (isSignedIn) {\n      const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n      const { session_id } = this.props.data;\n      const { id, iso_639_1 } = this.props.account;\n      const data = {\n        api: api,\n        session_id: session_id,\n        id: id,\n        sort: sort,\n        page: page,\n        iso_639_1: iso_639_1\n      };\n      this.props.onRequestWatchList(data);\n    }\n  }\n\n  // This gets called when ever the input boxes are used\n  // This sets the un if it was an username change or a pw if it was a password change with each change\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  //This calls the action to autenticate the request_token with a users credentials\n  handleAuthenticate = e => {\n    e.preventDefault(); //Preventing the form from rerendering the screen\n    let data = {\n      api: this.props.api,\n      un: this.props.un,\n      pw: this.props.pw,\n      page: 1,\n      query: false\n    };\n    this.props.onRequestToken(data); // Calling the onRequestToken and passing in the api key that was just grabbed\n    this.props.onRequestTV(data);\n  };\n\n  handleGetWatchList() {\n    const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n    const { session_id } = this.props.data;\n    const { id, iso_639_1 } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      sort: sort,\n      page: page,\n      iso_639_1: iso_639_1,\n      query: false\n    };\n    this.props.onRequestWatchList(data);\n  }\n\n  submitSearchClick = () => {\n    const { api } = this.props;\n    const search = this.props.search;\n\n    const data = {\n      api: api,\n      page: 1,\n      search: search,\n      query: true\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  //This will get take the id from the event, passs it in with the users account, and either apply or remove it from the watchList\n  // Change the css to red rather than recalling the watchlist\n  handleClickAdd = e => {\n    let arr = e.target.id.split(\"-\");\n    let tv_id = arr[1];\n    let addOrRemove;\n    if (arr[0] === \"R\") {\n      addOrRemove = false;\n    } else {\n      addOrRemove = true;\n    }\n    const { api } = this.props;\n    const { session_id } = this.props.data;\n    const { id } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      body: {\n        media_type: \"tv\",\n        media_id: tv_id,\n        watchlist: addOrRemove\n      }\n    };\n    this.props.onRequestAddOrRemove(data);\n    this.handleGetWatchList();\n  };\n\n  //Logs the user out and grabs the popular tv shows to show\n  handleLogout = () => {\n    this.props.onLogout();\n    let data = {\n      api: this.props.api,\n      page: 1,\n      query: false\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  //\n  // -- RENDER --\n  //\n  render() {\n    // Deconstructing the props to use easier\n    const {\n      onPWChange,\n      onUNChange,\n      onSearchChange,\n      un,\n      pw,\n      search,\n      isSignedIn,\n      TVshows,\n      watchList,\n      errorData\n    } = this.props;\n\n    let tvElements;\n    if (TVshows.length === 0) {\n      tvElements = <tr className=\"ui active inline centerd huge loader\"></tr>;\n    } else if (isSignedIn) {\n      tvElements = TVshows.results.map(show => (\n        <TVRow\n          id={show.id}\n          key={show.id}\n          name={show.name}\n          image={show.poster_path}\n          year={show.first_air_date}\n          rate={show.vote_average}\n          lang={show.original_language}\n          handleClickAdd={this.handleClickAdd}\n          isSignedIn={isSignedIn}\n          watchList={watchList}\n        />\n      ));\n    } else {\n      tvElements = TVshows.results.map(show => (\n        <TVRow\n          id={show.id}\n          key={show.id}\n          name={show.name}\n          image={show.poster_path}\n          year={show.first_air_date}\n          rate={show.vote_average}\n          lang={show.original_language}\n          handleClickAdd={this.handleClickAdd}\n          isSignedIn={isSignedIn}\n          watchList={watchList}\n        />\n      ));\n    }\n\n    return (\n      <div className=\"ui\">\n        <SearchBar\n          un={un}\n          pw={pw}\n          search={search}\n          submitLogin={this.handleAuthenticate}\n          onUNChange={onUNChange}\n          onPWChange={onPWChange}\n          onSearchChange={onSearchChange}\n          submitSearch={this.submitSearchClick}\n          errorData={errorData}\n          handleLogout={this.handleLogout}\n          isSignedIn={isSignedIn}\n        />\n\n        <div className=\"ui container\">\n          <TVTable tvElements={tvElements} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\n\nconst TvShowWatchList = props => {\n  let { id, name, image, year, rate, desc, handleClickAdd } = props;\n  const Poster = `https://image.tmdb.org/t/p/w500/${image}`;\n\n  if (props.id === undefined) {\n    return <div className=\"item\"></div>;\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"image\">\n          <img alt=\"poster\" className=\"ui small image\" src={Poster} />\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">{name}</div>\n          <div className=\"meta\">\n            <span className=\"cinema\">\n              Year: {year} - Ratting: {rate}\n            </span>\n          </div>\n\n          <div className=\"description\">{desc}</div>\n          <div className=\"extra\">\n            <button\n              id={`R-${id}`}\n              onClick={handleClickAdd}\n              className=\"ui primary button\"\n            >\n              Remove From List\n              <i aria-hidden=\"true\" className=\"right chevron icon\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default TvShowWatchList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n//Styles\nimport \"../styles/WatchList.css\";\n//Components\nimport TvShowWatchList from \"../components/TvShowWatchList\";\nimport SearchBar from \"../components/SearchBar\";\n\n//Importing redux actions\nimport {\n  setUserNameField,\n  setPasswordField,\n  setSearchField,\n  requestToken,\n  requestTVShows,\n  requestWatchList,\n  requestAddOrRemoves,\n  userLogout\n} from \"../state/actions\";\n\n//Mapping reduxProps\nconst mapStateToProps = state => {\n  return {\n    un: state.setFields.un,\n    pw: state.setFields.pw,\n    isPending: state.requestToken.isPending,\n    error: state.requestToken.error,\n    requestToken: state.requestToken.requestToken,\n    data: state.requestToken.data,\n    api: state.requestToken.api,\n    account: state.requestAccount.account,\n    TVshows: state.requestTVShows.TVshows,\n    watchList: state.requestWatchList.watchList,\n    isSignedIn: state.requestAccount.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUNChange: event => dispatch(setUserNameField(event.target.value)),\n    onPWChange: event => dispatch(setPasswordField(event.target.value)),\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestToken: data => dispatch(requestToken(data)),\n    onRequestTV: data => dispatch(requestTVShows(data)),\n    onRequestWatchList: data => dispatch(requestWatchList(data)),\n    onRequestAddOrRemove: data => dispatch(requestAddOrRemoves(data)),\n    onLogout: () => dispatch(userLogout())\n  };\n};\n\nclass WatchList extends React.Component {\n  // If the user is signed in mounting this component will get the users current watchlist\n  componentDidMount() {\n    const { isSignedIn } = this.props;\n\n    if (isSignedIn) {\n      this.handleGetWatchList();\n    }\n  }\n\n  handleAuthenticate = e => {\n    e.preventDefault(); //Preventing the form from rerendering the screen\n    let data = {\n      api: this.props.api,\n      un: this.props.un,\n      pw: this.props.pw,\n      page: 1\n    };\n    this.props.onRequestToken(data); // Calling the onRequestToken and passing in the api key that was just grabbed\n  };\n\n  handleGetWatchList() {\n    const { api, page = 1, sort = \"created_at.asc\" } = this.props;\n    const { session_id } = this.props.data;\n    const { id, iso_639_1 } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      sort: sort,\n      page: page,\n      iso_639_1: iso_639_1\n    };\n    this.props.onRequestWatchList(data);\n  }\n\n  handleClickAdd = e => {\n    let arr = e.target.id.split(\"-\");\n    let tv_id = arr[1];\n    let addOrRemove;\n    if (arr[0] === \"R\") {\n      addOrRemove = false;\n    } else {\n      addOrRemove = true;\n    }\n    const { api } = this.props;\n    const { session_id } = this.props.data;\n    const { id } = this.props.account;\n\n    const data = {\n      api: api,\n      session_id: session_id,\n      id: id,\n      body: {\n        media_type: \"tv\",\n        media_id: tv_id,\n        watchlist: addOrRemove\n      }\n    };\n    this.props.onRequestAddOrRemove(data);\n    this.handleGetWatchList();\n  };\n\n  handleLogout = () => {\n    this.props.onLogout();\n    let data = {\n      api: this.props.api,\n      page: 1,\n      query: false\n    };\n\n    this.props.onRequestTV(data);\n  };\n\n  render() {\n    const {\n      onPWChange,\n      onUNChange,\n      un,\n      pw,\n      watchList,\n      isSignedIn\n    } = this.props;\n\n    let watchlistTable;\n    if (isSignedIn) {\n      if (watchList.length === 0) {\n        this.handleGetWatchList();\n      } else {\n        watchlistTable = watchList.results.map(show => (\n          <TvShowWatchList\n            id={show.id}\n            key={show.id}\n            name={show.name}\n            image={show.poster_path}\n            year={show.first_air_date}\n            rate={show.vote_average}\n            lang={show.original_language}\n            desc={show.overview}\n            handleClickAdd={this.handleClickAdd}\n          />\n        ));\n      }\n    } else {\n      watchlistTable = (\n        <div>\n          <div className=\"ui red message header\">\n            Please sign in to get your TV watchList\n          </div>\n          <div className=\"ui divider\"></div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"ui\">\n        <SearchBar\n          un={un}\n          pw={pw}\n          submitLogin={this.handleAuthenticate}\n          onUNChange={onUNChange}\n          onPWChange={onPWChange}\n          handleLogout={this.handleLogout}\n          isSignedIn={isSignedIn}\n          searchFalse={false}\n        />\n        <div className=\"ui\">\n          <div className=\"ui container divided items watchListTable\">\n            {watchlistTable}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WatchList);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport Home from \"../containers/Home\";\nimport WatchList from \"../containers/WatchList\";\n\nfunction AppRouter() {\n  return (\n    <Router basename=\"/MovieDB\">\n      <div>\n        <nav className=\"ui  pointing secondary menu container \">\n          <NavLink className=\" item\" exact to=\"/\" activeClassName=\"active\">\n            Home\n          </NavLink>\n\n          <NavLink className=\" item\" to=\"/watch_list/\" activeClassName=\"active\">\n            Watch List\n          </NavLink>\n        </nav>\n        <Route as={NavLink} exact path=\"/\" component={Home} />\n        <Route as={NavLink} path=\"/watch_list/\" component={WatchList} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"../navigation/AppRouter\";\n\nconst Header = () => {\n  return (\n    <div className=\"ui \">\n      <h1 className=\" ui huge inverted vertical center aligned segment\">\n        My Tv shows\n      </h1>\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./styles/App.css\";\n\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui \">\n        <Header class=\"ui vertical center aligned segment\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  CHANGE_USERNAME_FIELD,\n  CHANGE_PASSWORD_FIELD,\n  REQUEST_RTOKEN_PENDING,\n  REQUEST_RTOKEN_SUCCESS,\n  REQUEST_RTOKEN_FAILED,\n  REQUEST_ACC_PENDING,\n  REQUEST_ACC_SUCCESS,\n  REQUEST_ACC_FAILED,\n  REQUEST_TV_PENDING,\n  REQUEST_TV_SUCCESS,\n  REQUEST_TV_FAILED,\n  REQUEST_STATES_PENDING,\n  REQUEST_STATES_SUCCESS,\n  REQUEST_STATES_FAILED,\n  REQUEST_WATCHLIST_PENDING,\n  REQUEST_WATCHLIST_SUCCESS,\n  REQUEST_WATCHLIST_FAILED,\n  ADD_OR_REMOVE,\n  REQUEST_SEARCH_PENDING,\n  REQUEST_SEARCH_SUCCESS,\n  REQUEST_SEARCH_FAILED,\n  ERROR_NO_DATA,\n  USER_LOGOUT\n} from \"../constants/constants\";\n\n// Setting inital state for the state\nconst initialState = {\n  un: \"\",\n  pw: \"\",\n  search: \"\",\n  error: \"\"\n};\n\nexport const userLogout = (action = {}) => {\n  switch (action.type) {\n    case USER_LOGOUT:\n      return { USER_LOGOUT };\n    default:\n      return USER_LOGOUT;\n  }\n};\n\nexport const setFields = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_USERNAME_FIELD:\n      return { ...state, un: action.payload };\n    case CHANGE_PASSWORD_FIELD:\n      return { ...state, pw: action.payload };\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, search: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateAuth = {\n  isPending: true,\n  api: \"9ccbc3e0393b7578cbf2eb8ae9f260c0\",\n  error: \"\",\n  data: []\n};\n\nexport const requestToken = (state = initialStateAuth, action = {}) => {\n  switch (action.type) {\n    case REQUEST_RTOKEN_PENDING:\n      return Object.assign({}, state, { isPending: true, errorData: false });\n\n    case REQUEST_RTOKEN_SUCCESS:\n      return Object.assign({}, state, {\n        data: action.payload,\n        isPending: false,\n        errorData: false\n      });\n\n    case REQUEST_RTOKEN_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialStateAccount = {\n  // accountStat: false,\n  isPending: true,\n  error: \"\",\n  account: [],\n  isSignedIn: false,\n  errorData: false\n};\n\nexport const requestAccount = (state = initialStateAccount, action = {}) => {\n  switch (action.type) {\n    case ERROR_NO_DATA:\n      return Object.assign({}, state, { errorData: true });\n    case REQUEST_ACC_PENDING:\n      return Object.assign({}, state, { isPending: true, errorData: false });\n\n    case REQUEST_ACC_SUCCESS:\n      return Object.assign({}, state, {\n        account: action.payload,\n        isSignedIn: true,\n        isPending: false,\n        errorData: false\n      });\n\n    case REQUEST_ACC_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n        errorData: false\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialStateTV = {\n  isPending: true,\n  error: \"\",\n  TVshows: [],\n  haveTV: false,\n  stateCheck: []\n};\n\n// Request for a TV show without authentication\nexport const requestTVShows = (state = initialStateTV, action = {}) => {\n  switch (action.type) {\n    case REQUEST_TV_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_TV_SUCCESS:\n      return Object.assign({}, state, {\n        TVshows: action.payload,\n        haveTV: false,\n        isPending: false\n      });\n\n    case REQUEST_TV_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    case REQUEST_SEARCH_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_SEARCH_SUCCESS:\n      return Object.assign({}, state, {\n        watchList: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_SEARCH_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\n// -- Getting the users watchlist\nconst initialWatchList = {\n  isPending: true,\n  error: \"\",\n  watchList: []\n};\n\nexport const requestWatchList = (state = initialWatchList, action = {}) => {\n  switch (action.type) {\n    case REQUEST_WATCHLIST_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_WATCHLIST_SUCCESS:\n      return Object.assign({}, state, {\n        watchList: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_WATCHLIST_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n\n    default:\n      return state;\n  }\n};\n\n//Gets back a status of if the movie is in the watchlist or not\nexport const requestAccountStates = (state = initialStateTV, action = {}) => {\n  switch (action.type) {\n    case REQUEST_STATES_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_STATES_SUCCESS:\n      return Object.assign({}, state, {\n        ...state,\n        stateCheck: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_STATES_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nconst initialWatchListAddRemove = {\n  isPending: true,\n  error: \"\",\n  tvShow: []\n};\n\nexport const requestAddOrRemoves = (\n  state = initialWatchListAddRemove,\n  action = {}\n) => {\n  switch (action.type) {\n    case REQUEST_WATCHLIST_PENDING:\n      return Object.assign({}, state, { isPending: true });\n\n    case REQUEST_WATCHLIST_SUCCESS:\n      return Object.assign({}, state, {\n        tvShow: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_WATCHLIST_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: true\n      });\n    default:\n      return state;\n  }\n};\n\nexport const addOrDelete = (state = initialWatchList, action) => {\n  switch (action.type) {\n    case ADD_OR_REMOVE:\n      //let tv_id = action.payload;\n      return {\n        ...state,\n        watchList: state.watchList.filter(\n          show => show.watchList.results.id !== action.tv_id\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\n//SEMANTIC-UI-REACT for css and some compoennts\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\n//import { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  setFields,\n  requestToken,\n  requestAccount,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  addOrDelete\n} from \"./state/reducers\";\n\n//Added redux logger in for debugging purposes\n//const logger = createLogger();\nconst appReducer = combineReducers({\n  setFields,\n  requestToken,\n  requestAccount,\n  requestTVShows,\n  requestWatchList,\n  requestAccountStates,\n  requestAddOrRemoves,\n  addOrDelete\n});\nconst rootReducer = (state, action) => {\n  if (action.type === \"USER_LOGOUT\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}